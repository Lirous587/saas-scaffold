services:
  # Citus Coordinator节点
  citus-coordinator:
    image: citusdata/citus:12.1
    container_name: ${COMPOSE_PROJECT_NAME}-citus-coordinator
    environment:
      POSTGRES_DB: scaffold
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "15452:5432"
    volumes:
      - coordinator-data:/var/lib/postgresql/data
      - ./config/citus-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      citus-network:
        ipv4_address: 172.40.0.10
    command: >
      postgres
      -c shared_preload_libraries=citus
      -c max_connections=200
      -c logging_collector=on
      -c log_directory='pg_log'
      -c log_filename='postgresql-%Y-%m-%d_%H%M%S.log'
      -c log_statement=all
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scaffold"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      citus-worker1:
        condition: service_healthy
      citus-worker2:
        condition: service_healthy
      citus-worker3:
        condition: service_healthy

  # Citus Worker节点1
  citus-worker1:
    image: citusdata/citus:12.1
    container_name: ${COMPOSE_PROJECT_NAME}-citus-worker1
    environment:
      POSTGRES_DB: scaffold
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "15453:5432"
    volumes:
      - worker1-data:/var/lib/postgresql/data
    networks:
      citus-network:
        ipv4_address: 172.40.0.11
    command: >
      postgres
      -c shared_preload_libraries=citus
      -c max_connections=100
      -c logging_collector=on
      -c log_directory='pg_log'
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scaffold"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Citus Worker节点2
  citus-worker2:
    image: citusdata/citus:12.1
    container_name: ${COMPOSE_PROJECT_NAME}-citus-worker2
    environment:
      POSTGRES_DB: scaffold
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "15454:5432"
    volumes:
      - worker2-data:/var/lib/postgresql/data
    networks:
      citus-network:
        ipv4_address: 172.40.0.12
    command: >
      postgres
      -c shared_preload_libraries=citus
      -c max_connections=100
      -c logging_collector=on
      -c log_directory='pg_log'
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scaffold"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Citus Worker节点3
  citus-worker3:
    image: citusdata/citus:12.1
    container_name: ${COMPOSE_PROJECT_NAME}-citus-worker3
    environment:
      POSTGRES_DB: scaffold
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "15455:5432"
    volumes:
      - worker3-data:/var/lib/postgresql/data
    networks:
      citus-network:
        ipv4_address: 172.40.0.13
    command: >
      postgres
      -c shared_preload_libraries=citus
      -c max_connections=100
      -c logging_collector=on
      -c log_directory='pg_log'
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scaffold"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis 服务
  redis:
    image: redis:7.4-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    ports:
      - "16399:6379"
    environment:
      REDIS_PASSWORD: password
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - citus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
volumes:
  coordinator-data:
  worker1-data:
  worker2-data:
  worker3-data:
  redis-data:

networks:
  citus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.40.0.0/16
          gateway: 172.40.0.1